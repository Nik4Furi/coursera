{"version":3,"file":"static/js/761.7c36fa38.chunk.js","mappings":"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","sources":["components/Layout/FormInput.jsx","pages/Auth/ChangePassword.jsx","pages/Auth/Login.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nimport { FormControl, FormLabel, Input, InputGroup, InputLeftElement } from '@chakra-ui/react'\r\n\r\nconst FormInput = ({ label, icon, type, placeholder, minlen, maxlen, name, value, handleChange, my = '4', css, outline = 'salmon', border = '0.5px solid' }) => {\r\n    \r\n    return (\r\n        <>\r\n            <FormControl isRequired my={my}>\r\n\r\n                {label && <FormLabel> {label}: </FormLabel>}\r\n\r\n                <InputGroup>\r\n\r\n                    <InputLeftElement pointerEvents='none'> {icon} </InputLeftElement>\r\n\r\n                    <Input css={css} type={type} placeholder={placeholder} minLength={minlen} maxLength={maxlen} value={value} onChange={handleChange} name={name} id={name} outline={outline} border={border} />\r\n\r\n                </InputGroup>\r\n\r\n            </FormControl>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormInput\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box, Container, Heading } from '@chakra-ui/react';\r\n\r\n//--------Redux Store specific stuff\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { handleUpdateUserPassword } from '../../Store/UsersSlice';\r\n\r\n//Components Stuff\r\nimport { FormInputPassword } from './Login';\r\nimport Buttons from '../../components/Layout/Buttons';\r\n\r\n\r\nconst ChangePassword = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading } = useSelector(state => state.user);\r\n\r\n    //------------------ Form Specific Stuff ----------------\r\n\r\n    const [formData, setFormData] = useState({\r\n        oldpassword: '',\r\n        newpassword: ''\r\n    });\r\n\r\n    //Function to handle the onchange event on input data\r\n    const handleOnChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    //Function to change the password\r\n    const handleChangePassword = async (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(handleUpdateUserPassword(formData))\r\n\r\n        setFormData({ oldpassword: '', newpassword: '' })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section id='ChangePassword'>\r\n\r\n                <Container minH={'container.md'} my={'5'}>\r\n\r\n                    <Heading >Change Your Password</Heading>\r\n\r\n                    <form onSubmit={handleChangePassword}>\r\n\r\n                        <FormInputPassword label={'Enter Old Password'} name={'oldpassword'} value={formData.oldpassword} handleChange={handleOnChange} />\r\n\r\n                        <FormInputPassword label={'Enter New Password'} name={'newpassword'} value={formData.newpassword} handleChange={handleOnChange} />\r\n\r\n                        <Box p='2' my='4'>\r\n                            <Buttons type='submit' loading={loading} fontsize='lg' display={'block'} mx='auto' width=\"full\" title={'Change Password'} />\r\n                        </Box>\r\n\r\n                    </form>\r\n\r\n                </Container>\r\n\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChangePassword\r\n","import React, { useState } from 'react'\r\n\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nimport {\r\n    Container, VStack, FormControl,\r\n    FormLabel,\r\n    Input,\r\n    InputGroup,\r\n    InputRightElement,\r\n    Button,\r\n    InputLeftElement,\r\n    Heading,\r\n    Box,\r\n    Text,\r\n} from '@chakra-ui/react'\r\n\r\nimport toast from 'react-hot-toast'\r\n\r\n//------------- Store Specific Stuff\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUser, handleLoginUser } from '../../Store/UsersSlice'\r\n\r\n//Icons/Images Specific Stuff\r\nimport { AiOutlineMail } from 'react-icons/ai'\r\nimport { RiLockPasswordLine } from 'react-icons/ri'\r\n\r\n\r\n//Components Stuff\r\nimport Buttons from '../../components/Layout/Buttons'\r\nimport FormInput from '../../components/Layout/FormInput'\r\nimport TextHighlight from '../../components/Layout/TextHighlight'\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    //------------------ Store specific stuff\r\n    const { loading } = useSelector(state => state.user);\r\n\r\n    //------------------ Form Specific Stuff ----------------\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    //Function to handle the onchange event on input data\r\n    const handleOnChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    //---------- Function to submit the form data or can say login the users \r\n    const handleSubmit = async (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        if ((/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(formData.email)) === false) {\r\n            toast.error(`${formData.email} is not valid`);\r\n            setFormData({ ...formData, email: '' });\r\n            return;\r\n        }\r\n\r\n\r\n        await dispatch(handleLoginUser(formData));\r\n\r\n        dispatch(getUser());\r\n\r\n        navigate(0);\r\n\r\n        setFormData({ email: '', password: '' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section id=\"Login\">\r\n\r\n                <Container minH={'container.sm'} my={'5'}>\r\n\r\n                    <Heading>Welcome to  Coursera</Heading>\r\n\r\n                    <form onSubmit={handleSubmit} style={{ minWidth: \"100%\" }}>\r\n                        <VStack>\r\n\r\n                            <FormInput type={'email'} label={'Enter Email'} icon={<AiOutlineMail />} name='email' id='email' placeholder={'johndoe23@gmail.com'} value={formData.email} handleChange={handleOnChange} minlen={5} maxlen={120} />\r\n\r\n                            <FormInputPassword label={'Enter Password'} name={'password'} id='password' value={formData.password} handleChange={handleOnChange} />\r\n\r\n                            <Link to='/forgetpassword' ><Text mt='-3.5' me={'-72'}  ><TextHighlight title={'Forget Password'} size='sm' /> </Text> </Link>\r\n\r\n                            <Box w='full' my='4'>\r\n                                <Buttons loading={loading} type='submit' fontsize='lg' display={'block'} width=\"full\" title={'Login'} />\r\n                            </Box>\r\n\r\n                        </VStack>\r\n                    </form>\r\n\r\n                    <Link to={'/register'} ><Text textAlign={'right'} textDecoration={'underline'} variant={'ghost'}>Creating A New Account</Text> </Link>\r\n\r\n                </Container>\r\n\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n\r\n//------------ Form controller used to store only password\r\nexport const FormInputPassword = ({ label, name, handleChange, value, outline = 'salmon', border = '0.5px solid' }) => {\r\n\r\n    //Function to show data of password\r\n    const [show, setShow] = React.useState(false)\r\n    const handleClick = () => setShow(!show)\r\n\r\n    return (\r\n        <FormControl isRequired my='4'>\r\n\r\n            <FormLabel>{label} :</FormLabel>\r\n\r\n            <InputGroup size='md'>\r\n                <InputLeftElement pointerEvents='none'> <RiLockPasswordLine /> </InputLeftElement>\r\n\r\n                <Input\r\n                    pr='4.5rem'\r\n                    name={name}\r\n                    type={show ? 'text' : 'password'}\r\n                    placeholder='*********'\r\n                    minLength={8} maxLength={120}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    id={name}\r\n                    outline={outline}\r\n                    border={border}\r\n                />\r\n\r\n                <InputRightElement width='4.5rem'>\r\n                    <Button h='1.75rem' size='sm' onClick={handleClick}>\r\n                        {show ? 'Hide' : 'Show'}\r\n                    </Button>\r\n                </InputRightElement>\r\n            </InputGroup>\r\n        </FormControl>\r\n    )\r\n}"],"names":["_ref","label","icon","type","placeholder","minlen","maxlen","name","value","handleChange","_ref$my","my","css","_ref$outline","outline","_ref$border","border","_jsx","_Fragment","children","_jsxs","FormControl","isRequired","FormLabel","InputGroup","InputLeftElement","pointerEvents","Input","minLength","maxLength","onChange","id","dispatch","useDispatch","loading","useSelector","state","user","_useState","useState","oldpassword","newpassword","_useState2","_slicedToArray","formData","setFormData","handleOnChange","e","_objectSpread","_defineProperty","target","handleChangePassword","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","handleUpdateUserPassword","stop","_x","apply","arguments","Container","minH","Heading","onSubmit","FormInputPassword","Box","p","Buttons","fontsize","display","mx","width","title","navigate","useNavigate","email","password","handleSubmit","test","toast","error","concat","abrupt","handleLoginUser","getUser","style","minWidth","VStack","FormInput","AiOutlineMail","Link","to","Text","mt","me","TextHighlight","size","w","textAlign","textDecoration","variant","_ref2","_ref2$outline","_ref2$border","_React$useState","React","_React$useState2","show","setShow","RiLockPasswordLine","pr","InputRightElement","Button","h","onClick"],"sourceRoot":""}