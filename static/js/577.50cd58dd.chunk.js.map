{"version":3,"file":"static/js/577.50cd58dd.chunk.js","mappings":"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","sources":["components/Layout/FormInput.jsx","pages/Auth/Login.jsx","pages/Auth/Register.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nimport { FormControl, FormLabel, Input, InputGroup, InputLeftElement } from '@chakra-ui/react'\r\n\r\nconst FormInput = ({ label, icon, type, placeholder, minlen, maxlen, name, value, handleChange, my = '4', css, outline = 'salmon', border = '0.5px solid' }) => {\r\n    \r\n    return (\r\n        <>\r\n            <FormControl isRequired my={my}>\r\n\r\n                {label && <FormLabel> {label}: </FormLabel>}\r\n\r\n                <InputGroup>\r\n\r\n                    <InputLeftElement pointerEvents='none'> {icon} </InputLeftElement>\r\n\r\n                    <Input css={css} type={type} placeholder={placeholder} minLength={minlen} maxLength={maxlen} value={value} onChange={handleChange} name={name} id={name} outline={outline} border={border} />\r\n\r\n                </InputGroup>\r\n\r\n            </FormControl>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormInput\r\n","import React, { useState } from 'react'\r\n\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nimport {\r\n    Container, VStack, FormControl,\r\n    FormLabel,\r\n    Input,\r\n    InputGroup,\r\n    InputRightElement,\r\n    Button,\r\n    InputLeftElement,\r\n    Heading,\r\n    Box,\r\n    Text,\r\n} from '@chakra-ui/react'\r\n\r\nimport toast from 'react-hot-toast'\r\n\r\n//------------- Store Specific Stuff\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUser, handleLoginUser } from '../../Store/UsersSlice'\r\n\r\n//Icons/Images Specific Stuff\r\nimport { AiOutlineMail } from 'react-icons/ai'\r\nimport { RiLockPasswordLine } from 'react-icons/ri'\r\n\r\n\r\n//Components Stuff\r\nimport Buttons from '../../components/Layout/Buttons'\r\nimport FormInput from '../../components/Layout/FormInput'\r\nimport TextHighlight from '../../components/Layout/TextHighlight'\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    //------------------ Store specific stuff\r\n    const { loading } = useSelector(state => state.user);\r\n\r\n    //------------------ Form Specific Stuff ----------------\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    //Function to handle the onchange event on input data\r\n    const handleOnChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    //---------- Function to submit the form data or can say login the users \r\n    const handleSubmit = async (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        if ((/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(formData.email)) === false) {\r\n            toast.error(`${formData.email} is not valid`);\r\n            setFormData({ ...formData, email: '' });\r\n            return;\r\n        }\r\n\r\n\r\n        await dispatch(handleLoginUser(formData));\r\n\r\n        dispatch(getUser());\r\n\r\n        navigate(0);\r\n\r\n        setFormData({ email: '', password: '' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section id=\"Login\">\r\n\r\n                <Container minH={'container.sm'} my={'5'}>\r\n\r\n                    <Heading>Welcome to  Coursera</Heading>\r\n\r\n                    <form onSubmit={handleSubmit} style={{ minWidth: \"100%\" }}>\r\n                        <VStack>\r\n\r\n                            <FormInput type={'email'} label={'Enter Email'} icon={<AiOutlineMail />} name='email' id='email' placeholder={'johndoe23@gmail.com'} value={formData.email} handleChange={handleOnChange} minlen={5} maxlen={120} />\r\n\r\n                            <FormInputPassword label={'Enter Password'} name={'password'} id='password' value={formData.password} handleChange={handleOnChange} />\r\n\r\n                            <Link to='/forgetpassword' ><Text mt='-3.5' me={'-72'}  ><TextHighlight title={'Forget Password'} size='sm' /> </Text> </Link>\r\n\r\n                            <Box w='full' my='4'>\r\n                                <Buttons loading={loading} type='submit' fontsize='lg' display={'block'} width=\"full\" title={'Login'} />\r\n                            </Box>\r\n\r\n                        </VStack>\r\n                    </form>\r\n\r\n                    <Link to={'/register'} ><Text textAlign={'right'} textDecoration={'underline'} variant={'ghost'}>Creating A New Account</Text> </Link>\r\n\r\n                </Container>\r\n\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n\r\n//------------ Form controller used to store only password\r\nexport const FormInputPassword = ({ label, name, handleChange, value, outline = 'salmon', border = '0.5px solid' }) => {\r\n\r\n    //Function to show data of password\r\n    const [show, setShow] = React.useState(false)\r\n    const handleClick = () => setShow(!show)\r\n\r\n    return (\r\n        <FormControl isRequired my='4'>\r\n\r\n            <FormLabel>{label} :</FormLabel>\r\n\r\n            <InputGroup size='md'>\r\n                <InputLeftElement pointerEvents='none'> <RiLockPasswordLine /> </InputLeftElement>\r\n\r\n                <Input\r\n                    pr='4.5rem'\r\n                    name={name}\r\n                    type={show ? 'text' : 'password'}\r\n                    placeholder='*********'\r\n                    minLength={8} maxLength={120}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    id={name}\r\n                    outline={outline}\r\n                    border={border}\r\n                />\r\n\r\n                <InputRightElement width='4.5rem'>\r\n                    <Button h='1.75rem' size='sm' onClick={handleClick}>\r\n                        {show ? 'Hide' : 'Show'}\r\n                    </Button>\r\n                </InputRightElement>\r\n            </InputGroup>\r\n        </FormControl>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nimport { Avatar, Box, Heading, VStack, Container, Text } from '@chakra-ui/react'\r\n\r\nimport toast from 'react-hot-toast'\r\n\r\n//----------Store Specific Stuff\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { handleRegisterUser } from '../../Store/UsersSlice'\r\n\r\n//Icons/Images Stuff\r\nimport { AiOutlineMail, AiOutlineUser } from 'react-icons/ai'\r\nimport { RxAvatar } from 'react-icons/rx'\r\n\r\n//Global Functions stuff\r\nimport { AvatarTypes } from '../../GlobalFunctions'\r\n\r\n//Components Stuff\r\nimport FormInput from '../../components/Layout/FormInput'\r\nimport { FormInputPassword } from './Login'\r\nimport Buttons from '../../components/Layout/Buttons'\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const {loading} = useSelector(state=>state.user);\r\n\r\n    //------------------ Form Specific Stuff ----------------\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        cpassword: '',\r\n        avatar: ''\r\n    });\r\n    const [imgPrev, setImgPrev] = useState('');\r\n\r\n    //Function to handle the onchange event on input data\r\n    const handleOnChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    //Function to handle upload image\r\n    const handleChangeImg = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        const reader = new FileReader();\r\n\r\n        reader.readAsDataURL(file);\r\n\r\n        reader.onload = () => {\r\n            setImgPrev(reader.result)\r\n        }\r\n\r\n        setFormData({ ...formData, avatar: file });\r\n\r\n        // Finding the type of the images is valid\r\n        if (AvatarTypes.includes(file.type) === false) {\r\n            toast.error(\"This type of image is not support\")\r\n            setFormData({ ...formData, avatar: '' })\r\n            return;\r\n        }\r\n\r\n        // Define the size of the image\r\n        const fileSize = file.size / 1e+6; //mb\r\n        if (fileSize.toFixed(2) > 5) {  //Can't upload file size > 5 MB\r\n            toast.error(\"Avatar must be less than 5 MB\");\r\n            setFormData({ ...formData, avatar: '' });\r\n            return;\r\n        }\r\n    }\r\n\r\n    //---------- Function to submit the form data or can say login the users \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { password, cpassword, avatar } = formData;\r\n\r\n        if (password !== cpassword) {\r\n            toast.error(\"Password and confirm password didn't match\");\r\n            setFormData({ ...formData, password: '', cpassword: '' })\r\n            return;\r\n        }\r\n\r\n        if (avatar === undefined || avatar === null || !avatar) {\r\n            toast.error(\"Neccessary to upload profile picture\")\r\n            setFormData({ ...formData, avatar: '' });\r\n            return;\r\n        }\r\n\r\n        const myForm = new FormData();;\r\n        myForm.append('name', formData.name);\r\n        myForm.append('email', formData.email);\r\n        myForm.append('password', formData.password);\r\n        myForm.append('cpassword', formData.cpassword);\r\n        myForm.append('file', formData.avatar);\r\n     \r\n        dispatch(handleRegisterUser(myForm));\r\n\r\n        \r\n        setFormData({ name: '', email: '', password: '', cpassword: '', avatar: '' });\r\n\r\n        navigate('/login')\r\n    }\r\n    //----------------------------Form Specific Stuff   - x \r\n\r\n    return (\r\n        <>\r\n            <section id=\"Register\">\r\n\r\n                <Container minH={'container.md'} my={'5'}>\r\n\r\n                    <Heading >Become A Memeber </Heading>\r\n\r\n                    <Avatar border={'1px solid salmon'} boxShadow={'md'} src={imgPrev} display={'block'} mx={'auto'} my={'2'} />\r\n\r\n                    <form style={{ minWidth: '100%' }} onSubmit={handleSubmit} my='3'>\r\n                        <VStack >\r\n\r\n                            <FormInput type={'text'} label={'Enter Name'} icon={<AiOutlineUser />} name='name' placeholder={'John Doe'} value={formData.name} handleChange={handleOnChange} minlen={5} maxlen={80} />\r\n\r\n                            <FormInput type={'email'} label={'Enter Email'} icon={<AiOutlineMail />} name='email' placeholder={'johndoe23@gmail.com'} value={formData.email} handleChange={handleOnChange} minlen={5} maxlen={120} />\r\n\r\n                            <FormInputPassword label={'Enter Password'} name={'password'} value={formData.password} handleChange={handleOnChange} />\r\n\r\n                            <FormInputPassword label={'Confirm Pasword'} name={'cpassword'} value={formData.cpassword} handleChange={handleOnChange} />\r\n\r\n\r\n                            <FormInput type='file' css={FileUpload} label={'Upload Your Pic'} icon={<RxAvatar />} name='avatar' handleChange={handleChangeImg} />\r\n\r\n                            <Box w='full' my='4'>\r\n                                <Buttons loading={loading} type={'submit'} fontsize='lg' display={'block'} width=\"full\" title={'Register'} />\r\n                            </Box>\r\n\r\n\r\n                        </VStack>\r\n\r\n                    </form>\r\n                    <Link to={'/login'} ><Text textAlign={'right'} textDecoration={'underline'} variant={'ghost'}>Have Already A Account</Text> </Link>\r\n\r\n\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n\r\n\r\n//------------- Uploading file css\r\nexport const FileUpload = {\r\n    \"&::file-selector-button\": {\r\n        cursor: 'pointer',\r\n        marginLeft: '-5%',\r\n        color: 'salmon',\r\n        border: 'none',\r\n        height: '100%',\r\n        background: 'transparent',\r\n        width: '110%'\r\n    }\r\n}\r\n"],"names":["_ref","label","icon","type","placeholder","minlen","maxlen","name","value","handleChange","_ref$my","my","css","_ref$outline","outline","_ref$border","border","_jsx","_Fragment","children","_jsxs","FormControl","isRequired","FormLabel","InputGroup","InputLeftElement","pointerEvents","Input","minLength","maxLength","onChange","id","dispatch","useDispatch","navigate","useNavigate","loading","useSelector","state","user","_useState","useState","email","password","_useState2","_slicedToArray","formData","setFormData","handleOnChange","e","_objectSpread","_defineProperty","target","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","test","toast","error","concat","abrupt","handleLoginUser","getUser","stop","_x","apply","arguments","Container","minH","Heading","onSubmit","style","minWidth","VStack","FormInput","AiOutlineMail","FormInputPassword","Link","to","Text","mt","me","TextHighlight","title","size","Box","w","Buttons","fontsize","display","width","textAlign","textDecoration","variant","_ref2","_ref2$outline","_ref2$border","_React$useState","React","_React$useState2","show","setShow","RiLockPasswordLine","pr","InputRightElement","Button","h","onClick","cpassword","avatar","_useState3","_useState4","imgPrev","setImgPrev","myForm","undefined","FormData","append","handleRegisterUser","Avatar","boxShadow","src","mx","AiOutlineUser","FileUpload","RxAvatar","file","files","reader","FileReader","readAsDataURL","onload","result","AvatarTypes","includes","toFixed","cursor","marginLeft","color","height","background"],"sourceRoot":""}