{"version":3,"file":"static/js/3.3ec0dec9.chunk.js","mappings":"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","sources":["pages/Payment/Subscription.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport { Box, Heading, Text, VStack } from '@chakra-ui/react'\r\n\r\n//--------Redux Store Specific Stuff\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { handleSubscription } from '../../Store/UsersSlice'\r\n\r\n\r\n//Global Functions Stuff\r\nimport { SERVER, Token } from '../../GlobalFunctions'\r\n\r\n//Components Stuff\r\nimport Buttons from '../../components/Layout/Buttons'\r\nimport Loading from '../../components/Layout/Loading'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\n\r\nconst Subscription = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [key, setKey] = useState('');\r\n\r\n  const { user,subscription,loading } = useSelector(state => state.user);\r\n\r\n  useEffect(() => {\r\n\r\n    if (subscription?.id) {\r\n\r\n      const openPopUp = () => {\r\n        var options = {\r\n          \"key\": key, // Enter the Key ID generated from the Dashboard\r\n          \"currency\": \"INR\",\r\n          \"name\": \"Coursera\", //your business name\r\n          \"description\": \"Become a premium member of Coursera\",\r\n          \"subscription_id\": subscription?.id,\r\n          // \"image\": \"https://example.com/your_logo\",\r\n          // \"order_id\": \"order_9A33XWu170gUtm\", //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n          \"callback_url\": `${SERVER}/payment/paymentVerification?user_id=${user?._id}`,\r\n          \"prefill\": { //We recommend using the prefill parameter to auto-fill customer's contact information especially their phone number\r\n            \"name\": user?.name, //your customer's name\r\n            \"email\": user?.email,\r\n            \"contact\": \"\" //Provide the customer's phone number for better conversion rates \r\n          },\r\n          \"notes\": {\r\n            \"address\": \"Cousera - Learning New Stuff Always\"\r\n          },\r\n          \"theme\": {\r\n            \"color\": \"#3399cc\"\r\n          }\r\n        };\r\n\r\n        const razor = new window.Razorpay(options);\r\n        razor.open();\r\n\r\n      }\r\n\r\n      openPopUp();\r\n    }\r\n  }, [dispatch, subscription?.id, setKey,key,user?.email,user?.name,user?._id]);\r\n\r\n  //--------------- Function to pay for the subscription\r\n  const handlePaySubscription = async () => {\r\n\r\n    const res = await fetch(`${SERVER}/payment/getSecretKey`, {\r\n      headers: {\r\n        'auth-token': Token\r\n      }\r\n    });\r\n    const data = await res.json();\r\n\r\n    setKey(data.secretKey);\r\n\r\n    dispatch(handleSubscription());\r\n\r\n  }\r\n\r\n  if(user?.subscription?.status === 'active')\r\n    return <Navigate to='/profile' />\r\n\r\n  return (\r\n    <>\r\n      <section id=\"Subscription\" style={{ minHeight: '60vh',padding:'10px' }}>\r\n\r\n        {loading && <Loading />}\r\n\r\n        <Heading textAlign={'center'}>Become A Pro Pack Member</Heading>\r\n\r\n        <VStack  boxShadow={'dark-lg'} justifyContent={'center'} alignItems={'center'} width={['100%','50%']} my={'4'} mx={['5','auto']} spacing={'5'} >\r\n\r\n          <Box bg='blackAlpha.50' boxShadow={'sm'} w={'full'} p={'3'} >Pro Pack* <strong>299</strong></Box>\r\n\r\n          <Box p={'2'} textAlign={'center'}  >\r\n\r\n            <Text>Become a pro pack member or join the community, and get access to watch all the videos</Text>\r\n\r\n            <Heading my='2'>&#x20B9;299 Only</Heading>\r\n\r\n            <Buttons handleClick={handlePaySubscription} title='Buy Now' />\r\n\r\n          </Box>\r\n          <Box bg={'blackAlpha.200'} w='full' p='3'>\r\n            <Text> 100% refund, If cancellation after 7 days</Text>\r\n            <Text fontSize={'9px'}>Terms & Condition Apply*</Text>\r\n          </Box>\r\n\r\n        </VStack>\r\n\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Subscription\r\n"],"names":["_user$subscription","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","key","setKey","_useSelector","useSelector","state","user","subscription","loading","useEffect","id","options","concat","SERVER","_id","name","email","window","Razorpay","open","openPopUp","handlePaySubscription","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","wrap","_context","prev","next","fetch","headers","Token","sent","json","secretKey","handleSubscription","stop","apply","arguments","status","_jsx","Navigate","to","_Fragment","children","_jsxs","style","minHeight","padding","Loading","Heading","textAlign","VStack","boxShadow","justifyContent","alignItems","width","my","mx","spacing","Box","bg","w","p","Text","Buttons","handleClick","title","fontSize"],"sourceRoot":""}