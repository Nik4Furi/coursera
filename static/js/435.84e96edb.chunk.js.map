{"version":3,"file":"static/js/435.84e96edb.chunk.js","mappings":"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","sources":["components/Layout/FormInput.jsx","pages/Auth/UpdateProfile.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nimport { FormControl, FormLabel, Input, InputGroup, InputLeftElement } from '@chakra-ui/react'\r\n\r\nconst FormInput = ({ label, icon, type, placeholder, minlen, maxlen, name, value, handleChange, my = '4', css, outline = 'salmon', border = '0.5px solid' }) => {\r\n    \r\n    return (\r\n        <>\r\n            <FormControl isRequired my={my}>\r\n\r\n                {label && <FormLabel> {label}: </FormLabel>}\r\n\r\n                <InputGroup>\r\n\r\n                    <InputLeftElement pointerEvents='none'> {icon} </InputLeftElement>\r\n\r\n                    <Input css={css} type={type} placeholder={placeholder} minLength={minlen} maxLength={maxlen} value={value} onChange={handleChange} name={name} id={name} outline={outline} border={border} />\r\n\r\n                </InputGroup>\r\n\r\n            </FormControl>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormInput\r\n","import React, { useState } from 'react'\r\n\r\nimport { Box, Container, Heading } from '@chakra-ui/react';\r\n\r\nimport toast from 'react-hot-toast'\r\n\r\n//Icons Stuff\r\nimport { AiOutlineMail, AiOutlineUser } from 'react-icons/ai'\r\n\r\n//Global Function Stuff\r\nimport { SERVER, Token } from '../../GlobalFunctions'\r\n\r\n//Components Stuff\r\nimport Buttons from '../../components/Layout/Buttons';\r\nimport FormInput from '../../components/Layout/FormInput';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateProfile } from '../../Store/UsersSlice';\r\n\r\n\r\nconst UpdateProfile = ({ user }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    //------------------ Form Specific Stuff ----------------\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: user?.name || '',\r\n        email: user?.email || ''\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    //Function to handle the onchange event on input data\r\n    const handleOnChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    //Function to change the password\r\n    const handleUpdateProfile = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setLoading(true);\r\n\r\n        // ------------------ Call the api to updating user profile \r\n        try {\r\n            const url = `${SERVER}/user/updateProfile`;\r\n            const options = {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': \"application/json\",\r\n                    'auth-token': Token\r\n                },\r\n                body: JSON.stringify(formData)\r\n            };\r\n\r\n            const res = await fetch(url, options);\r\n            const data = await res.json();\r\n\r\n            if (data.success === true) {\r\n\r\n                toast.success(data.msg);\r\n                dispatch(updateProfile({ name: formData.name, email: formData.email }))\r\n            }\r\n            else toast.error(data.msg);\r\n\r\n        } catch (error) {\r\n            toast.error(error);\r\n        }\r\n\r\n        setLoading(false);\r\n        setFormData({ name: '', email: '' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section id='UpdateProfile'>\r\n\r\n                <Container minH={'container.md'} my={'5'}>\r\n\r\n                    <Heading >Update Profile</Heading>\r\n\r\n                    <form onSubmit={handleUpdateProfile}>\r\n\r\n                        <FormInput type={'text'} label={'Enter Name'} icon={<AiOutlineUser />} name='name' placeholder={'John Doe'} value={formData.name} handleChange={handleOnChange} minlen={5} maxlen={80} />\r\n\r\n                        <FormInput type={'email'} label={'Enter Email'} icon={<AiOutlineMail />} name='email' placeholder={'johndoe23@gmail.com'} value={formData.email} handleChange={handleOnChange} minlen={5} maxlen={120} />\r\n\r\n                        <Box p='2' my='4'>\r\n                            <Buttons loading={loading} type='submit' fontsize='lg' display={'block'} mx='auto' width=\"full\" title={'Update Profile'} />\r\n                        </Box>\r\n\r\n                    </form>\r\n\r\n                </Container>\r\n\r\n\r\n\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n"],"names":["_ref","label","icon","type","placeholder","minlen","maxlen","name","value","handleChange","_ref$my","my","css","_ref$outline","outline","_ref$border","border","_jsx","_Fragment","children","_jsxs","FormControl","isRequired","FormLabel","InputGroup","InputLeftElement","pointerEvents","Input","minLength","maxLength","onChange","id","user","dispatch","useDispatch","_useState","useState","email","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","loading","setLoading","handleOnChange","e","_objectSpread","_defineProperty","target","handleUpdateProfile","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","options","res","data","wrap","_context","prev","next","preventDefault","concat","SERVER","method","headers","Token","body","JSON","stringify","fetch","sent","json","success","toast","msg","updateProfile","error","t0","stop","_x","apply","arguments","Container","minH","Heading","onSubmit","FormInput","AiOutlineUser","AiOutlineMail","Box","p","Buttons","fontsize","display","mx","width","title"],"sourceRoot":""}