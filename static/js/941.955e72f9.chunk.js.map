{"version":3,"file":"static/js/941.955e72f9.chunk.js","mappings":"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","sources":["components/Layout/FormInput.jsx","pages/ContactUS.jsx","../node_modules/@chakra-ui/textarea/dist/chunk-OEQDSMWZ.mjs"],"sourcesContent":["import React from 'react'\r\n\r\nimport { FormControl, FormLabel, Input, InputGroup, InputLeftElement } from '@chakra-ui/react'\r\n\r\nconst FormInput = ({ label, icon, type, placeholder, minlen, maxlen, name, value, handleChange, my = '4', css, outline = 'salmon', border = '0.5px solid' }) => {\r\n    \r\n    return (\r\n        <>\r\n            <FormControl isRequired my={my}>\r\n\r\n                {label && <FormLabel> {label}: </FormLabel>}\r\n\r\n                <InputGroup>\r\n\r\n                    <InputLeftElement pointerEvents='none'> {icon} </InputLeftElement>\r\n\r\n                    <Input css={css} type={type} placeholder={placeholder} minLength={minlen} maxLength={maxlen} value={value} onChange={handleChange} name={name} id={name} outline={outline} border={border} />\r\n\r\n                </InputGroup>\r\n\r\n            </FormControl>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormInput\r\n","import React,{useState} from 'react'\r\n\r\nimport { Box, Container, FormControl, FormLabel, Heading, InputGroup, Textarea, VStack } from '@chakra-ui/react'\r\n\r\nimport toast from 'react-hot-toast'\r\n\r\n//Icons/Images Specific Stuff\r\nimport { AiOutlineMail, AiOutlineUser } from 'react-icons/ai'\r\n\r\n//Global Function Stuff\r\nimport { SERVER } from '../GlobalFunctions';\r\n\r\n//Components Specific Stuff\r\nimport FormInput from '../components/Layout/FormInput';\r\nimport Buttons from '../components/Layout/Buttons';\r\n\r\nconst ContactUS = () => {\r\n\r\n    //------------------ Form Specific Stuff ----------------\r\n\r\n    const [formData, setFormData] = useState({\r\n        name:'',\r\n        email:'',\r\n        msg:''\r\n    });\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    //Function to handle the onchange event on input data\r\n    const handleOnChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n   //---------- Function to submit the form data or can say login the users \r\n   const handleSubmit = async(e) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    //---------- Validation the email\r\n    if(/^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/.test(formData.email) === false){\r\n        toast.error(`${formData.email} is not valid`)\r\n        setFormData({...formData,email:''});\r\n        setLoading(false);\r\n        return;\r\n    }\r\n\r\n    //----------- Call the api to send the mail for course request\r\n    try {\r\n        \r\n        const url = `${SERVER}/contact`;\r\n        const options = {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(formData)\r\n        };\r\n\r\n        const res = await fetch(url,options);\r\n        const data = await res.json();\r\n\r\n        if(data.success === true)\r\n            toast.success(data.msg);\r\n        else\r\n            toast.error(data.msg);\r\n\r\n        setLoading(false);\r\n        setFormData({name:'',email:'',msg:''});\r\n\r\n    } catch (error) { \r\n        toast.error(error);\r\n    }\r\n}\r\n\r\n\r\n    return (\r\n        <>\r\n            <section id=\"ContactUS\">\r\n                <Container minH={'container.sm'} >\r\n\r\n                    <Heading>Contact With US ðŸ“ž</Heading>\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                        <VStack>\r\n                            <FormInput type={'text'} label={'Enter Name'} icon={<AiOutlineUser />} name='name' placeholder={'John Doe'} value={formData.name} handleChange={handleOnChange} minlen={5} maxlen={80} />\r\n\r\n                            <FormInput type={'email'} label={'Enter Email'} icon={<AiOutlineMail />} name='email' placeholder={'johndoe23@gmail.com'} value={formData.email} handleChange={handleOnChange} minlen={5} maxlen={120} />\r\n\r\n                            <AddTextArea maxlen={400} minlen={10} label={'Enter Your Msg'} name='msg'  value={formData.msg} handleChange={handleOnChange} placeholder={'Enter your msg here'} />\r\n\r\n                            <Box w={'full'} p='2' my='4'>\r\n                                <Buttons type='submit'loading={loading} fontsize='lg' display={'block'} mx='auto' width=\"full\" title={'Send'} />\r\n                            </Box>\r\n\r\n                        </VStack>\r\n                    </form>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactUS\r\n\r\n\r\n\r\n\r\n// ---------------- Text area of to writing the msg \r\nexport const AddTextArea = ({label,value,handleChange,name,placeholder,my='2',minlen,maxlen,border='0.5px solid',outline='purple'})=>{\r\n    return (\r\n        <FormControl isRequired my={my}>\r\n                \r\n        {label && <FormLabel> {label}: </FormLabel>}\r\n\r\n        <InputGroup>\r\n            <Textarea minLength={minlen} maxLength={maxlen} placeholder={placeholder} name={name} id={name} value={value} onChange={handleChange} border={border} outline={outline} />\r\n\r\n        </InputGroup>\r\n\r\n    </FormControl>\r\n    )\r\n}\r\n\r\n","// src/textarea.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/textarea.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\nvar Textarea = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props);\n  const { className, rows, ...rest } = omitThemingProps(props);\n  const textareaProps = useFormControl(rest);\n  const textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /* @__PURE__ */ jsx(\n    chakra.textarea,\n    {\n      ref,\n      rows,\n      ...textareaProps,\n      className: cx(\"chakra-textarea\", className),\n      __css: textareaStyles\n    }\n  );\n});\nTextarea.displayName = \"Textarea\";\n\nexport {\n  Textarea\n};\n"],"names":["_ref","label","icon","type","placeholder","minlen","maxlen","name","value","handleChange","_ref$my","my","css","_ref$outline","outline","_ref$border","border","_jsx","_Fragment","children","_jsxs","FormControl","isRequired","FormLabel","InputGroup","InputLeftElement","pointerEvents","Input","minLength","maxLength","onChange","id","_useState","useState","email","msg","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","loading","setLoading","handleOnChange","e","_objectSpread","_defineProperty","target","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","options","res","data","wrap","_context","prev","next","preventDefault","test","toast","error","concat","abrupt","SERVER","method","headers","body","JSON","stringify","fetch","sent","json","success","t0","stop","_x","apply","arguments","Container","minH","Heading","onSubmit","VStack","FormInput","AiOutlineUser","AiOutlineMail","AddTextArea","Box","w","p","Buttons","fontsize","display","mx","width","title","_ref2","_ref2$my","_ref2$border","_ref2$outline","Textarea","omitted","forwardRef","props","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","className","rows","rest","_objectWithoutProperties","_excluded","textareaProps","useFormControl","textareaStyles","object","_step","keysToOmit","length","undefined","clone","Object","assign","_iterator","_createForOfIteratorHelper","s","n","done","key","err","f","omit","jsx","chakra","textarea","cx","__css","displayName"],"sourceRoot":""}